README : WiiSX / CubeSX

LICENSE:
    This software is licensed under the GNU General Public License v2
      which is available at: http://www.gnu.org/licenses/gpl-2.0.txt
    This requires any released modifications to be licensed similarly,
      and to have the source available.
    
    WiiSX/CubeSX and their respective logos are trademarks of Team Wii64
      and should not be used in unofficial builds.

QUICK USAGE:
 * ISOs can be .bin/.cue (Make sure .cue contains _relative_ directory!), .img, or .iso format
 * To install: Extract the contents of wiiSX-<version>.zip to the root of your SD card
 * SD Card detection order is as follows: 
	GameCube: GCLoader, SD2SP2, Slot A, Slot B.
	Wii: Front SD, Slot A, Slot B.
 * For SD/USB: Put ISOs (.bin/.cue or other formats) in the directory named /wiisx/isos,
    All save types will automatically be placed in /wiisx/saves
 * For DVD: ISOs may be anywhere on the disc, in ISO9660 format.
	GameCube: Currently broken due to libOGC issues with backups, XenoGC might still work.
	Wii: Requires a disc drive capable of reading DVD-R.
 * For actual BIOS: Put SCPH1001.BIN in the directory on SD/USB named /wiisx/bios
 * Load the executable from the HBC or in the loader of your choice
    Once loaded, select 'Load ISO' and choose the source and select the ISO to load
      (Note: to go up a directory select '..', B will exit the file browser)
 * Select 'Play Game' to play
   The game can be exited any time by pressing a configurable key combination together 
   on a GC pad (START & X), Classic Controller (HOME), Wiimote (- & +), 
   Wiimote+Nunchuck (1 & 2), or the reset button
     (Note: this must be done to save your game; it will not be done automatically)

Controls:
 * Controls are fully configurable so any button on your controller can be mapped
 * The controller configuration screen presents each PSX button and allows you to toggle through sources
 * There are 4 configuration slots for each type of controller
   * To load a different, previously saved configuration, select the slot, and click 'Load'
   * After configuring the controls as desired, select the slot, and click 'Save'
   * After saving different configurations to the slots, be sure to save your configs in the input tab of the settings frame
 * Clicking 'Next Pad' will cycle through the PSX controllers assigned
 * There is an option to invert the Y axis of the PSX's analog sticks; by default this is 'Normal Y'
 * The 'Menu Combo' configuration allows you to select a button combination to return to the menu

Settings:
 * General
   * Native Saves Device: Choose where to load and save native game saves
   * Save States Device: Choose where to load and save save states
   * Select CPU Core: Choose whether to play games with pure interpreter
     (better compatibility) or dynarec (better speed)
   * Save settings.cfg: Save all of these settings either SD or USB (to be loaded automatically next time)
 * Video
   * Show FPS: Display the framerate in the top-left corner of the screen
   * Screen Mode: Select the aspect ratio of the display; 'Force 16:9' will pillar-box the in-game display
 * Input
   * Configure Input: Select controllers to use in game
   * Configure Buttons: Enter the controller configuration screen described above
   * Save Button Configs: Save all of the controller configuration slots to SD or USB
   * Auto Load Slot: Select which slot to automatically be loaded for each type of controller
 * Audio
   * Disable Audio: Select to mute the sound
 * Saves
   * Auto Save Native Saves: When enabled, the emulator will automatically load
     saves from the selected device on ISO load and save when returning to the menu or
     turning off the console
   * Copy Saves: Not yet implemented
   * Delete Saves: Not yet implemented

COMPATIBILITY:
 Report any issues to https://github.com/emukidid/pcsxgc/issues

CREDITS:
 * General Coder: emu_kidid
 * Graphics & Menu Coder: sepp256
 * Audio & Core Coder: tehpola
 * Artwork: drmr
 * pcsx team http://www.pcsx.net/
 * notaz for pcsx-ReARMed
 * pcercuei for lightrec https://github.com/pcercuei/lightrec/
 * originally based on pcsx 1.5-test3 mac version by Gil Pederson http://pcsx.gpost.dk/
 * P.E.Op.S. PSX Gpu & SPU http://sourceforge.net/projects/peops/ 
 * SSSPSX
 * Compiled using the latest devKitPro/libOGC
     ( http://sourceforge.net/projects/devkitpro )
 * Visit us on IRC. EFNet #gc-forever or www.gc-forever.com or https://github.com/emukidid/pcsxgc/

CHANGE LOG:
	* See releases on github for these now, this section here is no longer maintained.
Beta 4.0:
	* libpsxcore properly integrated, no more hacky mess to receive fixes from upstream
	* switch to upstream unai gpu plugin for a huge performance boost
	* triple buffering
	* switch to cmake
Beta 3.0:
	* Back nearly 13 years later with a new dynarec thanks to pcercuei's lightrec
	  * Increases speed and compatibility
	* Sync'd with upstream pcsx-ReARMed
	  * Eliminates XA/CDDA slowdown completely on Wii
	* dfsound audio plugin
	* speed improvements in the soft graphics plugin thanks to tips from Extrems
	* SD2SP2 support on GameCube
	* General UI bugfixes and memory leaks addressed
Beta 2.1:
   * Compiled with devkitPPC r21 / libOGC SVN
   * Compiled with new libDI / DVDx V2
   * Saving improvements
     * Fixed issues where save was not written to memcard
     + Audio state saved/loaded for save states
   * Controller improvements
     * Fixed inverted Y-axis on analog input
     * Fixed rumble
     * Fixed button presses on unused input port
     + Added “Home” button as a menu combo for CC
     + Added disable rumble setting
   * Network improvements
     * SMB correction to allow anonymous user and password
     + Threaded network init and proper error messages when it fails
Beta 2:
   * Compiled with devkitPPC r21 / libOGC SVN
   * Compiled with new libDI / DVDx V2
   * DVD reads are now done with direct PowerPC access
   + Samba loading
   + Execute BIOS
   * Controller improvements
     + Rumble for Wiimote-based input
     + Wiimote-only controls
     + Classic Controller Pro & 3rd party controller support
     + Reconfigurable button mapping
       + Save/Load button mapping from file
   + New menu system
     + Classic Controller support
     + Wiimote / Wiimote & nunchuck support
     + Settings saving
     + Auto load/save option for saves
   * PEOPS GPU
     + Pillar-boxing 'Force 16:9' mode
     * Fixed color mapping for FMV
   + FranSPU
     * Smooth stereo audio at full FPS
   - PEOPS SPU
   + SSSPSX input plugin
     + DualShock Controller support
     + Rumble support
     * Analog/Digital switching
   + CDRMooby
     * Improved compatibility
     * CDDA not implemented yet
Beta 1:
   * Working audio (choppy)
   * DVD loading
   * Software GFX with GX scaling
   * Saving to SD card
   * Text UI
   * Known Issues:
     * CDDA audio streaming is not implemented
     * XA audio fails at times
     * Final Fantasy VII crashes Dynarec
     * FPS limit not working at times
   